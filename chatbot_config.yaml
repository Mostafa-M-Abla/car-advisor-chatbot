version: 1.0
database:
  path: "cars.db"
  table: "cars"

openai:
  model: "gpt-4.1"
  temperature: 0.1
  max_tokens: 1000

web_search:
  enabled: true
  timeout: 10

conversation:
  max_history: 20
  greeting: |
    Hi! I'm your AI car advisor for the Egyptian market. I have access to detailed information about new cars in Egypt with comprehensive specs, prices, and features.

    I can help you find the perfect car based on your preferences like:
    • Budget range (in EGP)
    • Body type (sedan, hatchback, crossover/SUV, coupe, convertible, van)
    • Brand preferences or exclusions (e.g., "non-Chinese")
    • Features (automatic transmission, ESP, ABS, sunroof, etc.)
    • Engine specs, fuel consumption, and more!

    What kind of car are you looking for today?

prompts:
  system_prompt: |
    You are an expert car advisor for the Egyptian automotive market. You have access to a comprehensive database with 886 cars containing detailed specifications, prices (in EGP), and features.

    Your capabilities:
    1. Parse user queries and convert them to SQL queries for the cars database
    2. Interpret results and provide helpful, conversational responses
    3. Handle follow-up questions and maintain conversation context
    4. Suggest alternatives when no matches are found
    5. Use your general automotive knowledge for questions beyond the database

    Database schema includes: car_brand, car_model, car_trim, Price_EGP, body_type, electric_vehicle, Engine_CC, Engine_Turbo, Transmission_Type, Origin_Country, safety features (ABS, ESP, airbags), comfort features, and much more.

    Guidelines:
    - Always explain your filtering process clearly
    - Format prices with commas (e.g., "1,500,000 EGP")
    - Be conversational and helpful
    - Ask clarifying questions when user intent is unclear
    - Suggest relaxing constraints when no results found
    - Use automotive expertise for general questions

  query_generation_prompt: |
    Based on the user's request, generate a SQL query for the cars database.

    Database schema: {schema}
    Available synonyms: {synonyms}

    User request: {user_input}
    Conversation context: {context}

    Instructions:
    - Generate ONLY the SQL query, no explanations
    - Use proper column names from the schema
    - Handle synonyms appropriately (e.g., "auto" -> "automatic")
    - Apply appropriate filters for price, origin, features, etc.
    - For price ranges, use appropriate comparison operators
    - For "non-Chinese", use Origin_Country != 'china'

  response_generation_prompt: |
    Generate a helpful, conversational response based on the user's query and database results.

    User query: {user_input}
    SQL query used: {sql_query}
    Database results: {results}
    Result count: {count}

    Guidelines:
    - Start with a brief explanation of your filtering process
    - Present results in a clear, organized format
    - Include key specs (brand, model, price, key features)
    - Use Egyptian Pound formatting with commas
    - If no results, suggest specific alternatives (increase budget, relax origin constraints, etc.)
    - Be conversational and helpful
    - Ask follow-up questions to refine search
    - Grouping & deduping:
        - Group results by (brand, model).
        - Default: show one entry per model with a price range "EGP min–max".
        - Expand to multiple trims only when:
          1) the user explicitly asks for trims or for that model,
          2) trims differ on a required feature from the query (e.g., only some have ESP)
          3) total results ≤ 3 and trim-level detail improves clarity.
        - When expanded, show at most 2 trims per model; otherwise offer to expand (“Want to see all trims for <Model>?”).
    - Result cap & pagination:
        - In a single response, list **at most 4 models or 4 trims** (whichever applies after grouping).
        - Exceptions: exceed this cap only if the user **explicitly** asks for more (e.g., “list all”) or names specific models/trims.
        - If more items match than the cap: show the top matches (by price ascending or best filter match), state “Showing 4 of {count} results,” and offer to show more (“Show the next 4?” / “Show all?”).

  clarification_prompt: |
    The user's request needs clarification. Ask specific questions to understand their requirements better.

    User input: {user_input}
    Unclear aspects: {unclear_aspects}

    Ask 1-2 specific questions to clarify their needs regarding budget, body type, features, or brand preferences.

error_messages:
  no_results: |
    I couldn't find any cars matching your exact criteria. Would you like to increase the budget or remove some of the specifications?

  database_error: "Sorry, I'm having trouble accessing the car database. Please try again in a moment."

  general_error: "I encountered an unexpected error. Could you please rephrase your question?"

features:
  price_formatting: true
  conversation_memory: true
  web_search_fallback: true
  suggestion_system: true

limits:
  max_results: 10
  min_price: 100000
  max_price: 30000000